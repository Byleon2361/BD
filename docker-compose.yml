version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: bd-postgres-1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: news_aggregator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./complete_news_database_postgres.sql:/docker-entrypoint-initdb.d/complete_news_database_postgres.sql
    networks:
      - bd_default
    command: >
      bash -c "
        # Запускаем стандартный entrypoint в фоне
        docker-entrypoint.sh postgres &
        PG_PID=$!
        
        # Ждем запуска БД
        until pg_isready -U postgres; do
          echo 'Waiting for primary to be ready...'
          sleep 2
        done
        
        # Настраиваем репликацию
        echo 'Configuring replication...'
        psql -U postgres -c \"CREATE USER replicator WITH REPLICATION PASSWORD 'replica_pass';\" 2>/dev/null || true
        psql -U postgres -c \"ALTER SYSTEM SET wal_level = replica;\" 
        psql -U postgres -c \"ALTER SYSTEM SET max_wal_senders = 10;\" 
        psql -U postgres -c \"ALTER SYSTEM SET max_replication_slots = 10;\" 
        
        # Добавляем правило в pg_hba.conf
        echo 'host replication replicator all md5' >> /var/lib/postgresql/data/pg_hba.conf
        echo 'host all replicator all md5' >> /var/lib/postgresql/data/pg_hba.conf
        
        # Перезагружаем конфигурацию
        psql -U postgres -c \"SELECT pg_reload_conf();\" 
        
        echo 'Primary database configured for replication'
        
        # Ждем завершения основного процесса PostgreSQL
        wait $PG_PID
      "

  postgres-replica:
    image: postgres:15
    container_name: bd-postgres-replica
    depends_on:
      - postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    networks:
      - bd_default
    command: >
      bash -c "
        # Ждем готовности основной БД
        until pg_isready -h postgres -p 5432 -U postgres; do
          echo 'Waiting for primary database...'
          sleep 5
        done
        
        # Даем дополнительное время для полной инициализации
        sleep 10
        
        echo 'Primary database is ready, setting up replica...'
        
        # Очищаем директорию данных реплики
        rm -rf /var/lib/postgresql/data/*
        
        # Создаем базовую копию с правильными параметрами
        PGPASSWORD=replica_pass pg_basebackup -h postgres -U replicator -p 5432 -D /var/lib/postgresql/data -P -R -X stream -C -S replica_slot
        
        # Устанавливаем правильные права
        chown -R postgres:postgres /var/lib/postgresql/data/
        
        # Настраиваем файл standby.signal для режима standby
        touch /var/lib/postgresql/data/standby.signal
        
        echo 'Replica setup complete, starting PostgreSQL...'
        
        # Запускаем PostgreSQL
        exec docker-entrypoint.sh postgres
      "

volumes:
  postgres_data:
  postgres_replica_data:

networks:
  bd_default:
    driver: bridge